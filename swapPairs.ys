# Execution begins at address 0 
    .pos 0
    irmovq stack, %rsp      # Set up stack pointer
    call main       # Execute main program
    halt            # Terminate program 

# Array of 4 elements
    .align 8
array:  
    .quad 0x000000000010
    .quad 0x000000000009
    .quad 0x000000000008
    .quad 0x000000000007
    .quad 0x000000000006
    .quad 0x000000000005
    .quad 0x000000000004
    .quad 0x000000000003
    .quad 0x000000000002
    .quad 0x000000000001
    
# XXmovq, where X's are on of
# i: immediate value
# r: register
# m: memory

main:   
    irmovq array,%rdi # puts array[0] in rdi
    irmovq $10,%rsi   # puts 10 in rsi
    call swapPairs        # calls swapPairs(array, 10)
    ret

swapPairs:    
    # we have a ptr to a[0] in rdi
    # ptr to a[1]
    rrmovq %rdi, %r8        
    iaddq $8, %r8    

    loop:   
        #1
        call swap
        #2
        iaddq $16,%rdi      
        iaddq $16,%r8 
        # 3 decrement counter and conditional jump
        # decrement by 2 b/c we only want to loop n/2 times (10/2 - 5)
        isubq $2, %rsi  
        jg loop #jne also works
    ret
swap:   
    mrmovq (%rdi), %rdx # moves contents pointed at by rdi into rdx
    mrmovq (%r8), %rbx  # same for r8, rbx
    rmmovq %rbx, (%rdi) # moves contents of rbx into address pointed at by rdi
    rmmovq %rdx, (%r8)  # same for rdx, r8
    ret                  # Return

# Stack starts here and grows to lower addresses
    .pos 0x200
stack:
